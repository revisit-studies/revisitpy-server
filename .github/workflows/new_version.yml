name: Create a new version and push to PyPi and GitHub

on:
  repository_dispatch:
    types: [study_repo_publish]
  workflow_dispatch:

jobs:
  create_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/checkout@v4
        with:
          repository: revisit-studies/study
          path: study

      - uses: actions/checkout@v4
        with:
          repository: revisit-studies/study
          path: study

      - name: Change VITE_BASE_PATH env variable
        run: |
          sed -i -E 's/^VITE_BASE_PATH="\/study\/"/VITE_BASE_PATH="\/"/' study/.env

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "yarn"
          cache-dependency-path: study/yarn.lock

      - name: Install study dependencies
        run: yarn --cwd=./study install --immutable

      - name: Build with .env file
        run: yarn --cwd=./study build

      - name: Copy new study docs to docs and cleanup
        run: |
          cp -vr study/dist/* src/revisitpy_server/static/

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Update pyproject.toml version
        run: |
          # Extract the current version
          MAJOR_VERSION=$(sed -nE 's/^version = "([0-9]+)\.[0-9]+\.[0-9]+"/\1/p' pyproject.toml)
          MINOR_VERSION=$(sed -nE 's/^version = "[0-9]+\.([0-9]+)\.[0-9]+"/\1/p' pyproject.toml)

          # Increment the minor version
          NEW_MINOR_VERSION=$((MINOR_VERSION + 1))
          NEW_VERSION="${MAJOR_VERSION}.${NEW_MINOR_VERSION}.0"

          # Update the version in pyproject.toml
          sed -i -E 's/^version = "[0-9]+\.[0-9]+\.[0-9]+"/version = "'"${NEW_VERSION}"'"/' pyproject.toml

          # Print the new version for debugging
          echo "New version: ${NEW_VERSION}"

      - name: Hatch Install
        run: |
          uv venv
          uv pip install hatch

      - name: Hatch Build
        run: |
          rm -rf study
          uv run hatch build

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Commit and push changes
        run: |
          git config --global user.email "jackwilburn@tutanota.com"
          git config --global user.name "Jack Wilburn"
          git pull
          git add pyproject.toml src
          git commit -m "Create a new version based on the latest tag"
          git push
